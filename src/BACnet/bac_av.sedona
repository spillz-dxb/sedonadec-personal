//
// Copyright (c) 2007 Tridium, Inc
// All Rights Reserved.
//
// History:
//   16 May 16 Titus creation
//

//@niagaraIcon="module://icons/x16/io.png"
class BACnetAV
  extends Component
{

//  @defaultOnClone

  @config property int Priority = 10
  @config property float In = 0.0
  @readonly @allowNull property float Out = 0.0

  @defaultOnClone
  @config property int ObjectID = -1

  virtual override void start()
  {
    // Don't touch hardware until input value is valid
    if ( !Sys.app.isSteadyState() )
      return

	Sys.out.print("SEDONA: $name : \"BACnetAV\" App Started!\n")
   return

  }

  override void changed(Slot slot)
  {
    super.changed(slot)

    // Don't respond to prop changes while app is loading
    if (!Sys.app.isRunning()) return

    if ( slot == BACnetAV.ObjectID )
	{
		objID_status = true;
		//Read the older value stored in the ObjectID (need to back as we are going to change the ObjectID)
		ret7 = BACnetDev.doBacnetAVObjectIdBkp(ObjectID)
		//write the older value
		Out := ret7
		ret6 = BACnetDev.doBacnetAVObjectIdUpdate(ObjectID,Out,Priority)
		Sys.out.print("SEDONA: $name: BACnetAV: ObjectID is changed and Priority:$ret6 Out:$Out ObjectID:$ObjectID!\n")
	}

    // If BACnetAV.In changes, clear the override and drive what IN has.
    if ( slot == BACnetAV.In )
	{

	//clear NULL status
		ret8 = false;

	//clear objectID change status
		objID_status = false;

		null_status = true;
		count = 0;

	//Allow to write by Sedona continuously if no write happens in BDT @1
		if ( ret2 != 0 )
			ov = false;

	//Not allow to write by Sedona if BDT is written @1 (most higher priority)
		if ( ret2 == 0 )
		{
		//	Sys.out.print("########### $name SEDONA ALERT!!!: Not allowed to write by Sedona if BDT is written @1  PRIORITY -> $ret2 !###########\n")
			Sys.out.print("SEDONA: $name: BACnetAV: Not allowed to write by Sedona if BDT is written @1, so pls make sure.\n")

			ov = true;
		}

		//clear the event
		ia[ObjectID] = -1;
		ib[ObjectID] = false;
	//	Sys.out.print("$name SEDONA: $name ##################### OVERRIDE is cleared for instance $ObjectID!!! #################### \n")

		In_change = true;
		Sys.out.print("SEDONA: $name: BACnetAV: Override is cleared as \"BACnetAV.In\" is changed, so now, drive what \"BACnetAV.In\" has! ( also please note that you can't control AVs in SEDONA when BDT@1, need to write 'null' in BDT) \n")

	//latest fix
		override_en = 0;

	}
  }

 virtual override void execute()
  {

	//Sys.out.print("SEDONA: $name : \"BACnetAV\" App Executing...!\n") 

	ret3 = BACnetDev.doBacnetInitStatus()

	ret = BACnetDev.doBacnetAVValueStatus(ObjectID)

	ret4 = BACnetDev.doBacnetAVOverrideInst()

	ia[ret4] = 1;

//	Sys.out.print("####### SEDONA: $name: BACnetAV: ret -> $ret ret3 -> $ret3 ret4 -> $ret4 ObjectID -> $ObjectID #######\n")

	override_en = BACnetDev.doBacnetAVOverrideStatus()

	//Sys.out.print("SEDONA: $name: BACnetAV: ################## Glory to GOD! ################## ObjectID $ObjectID override_en $override_en ret4 $ret4\n");

	if (ret3 == 0)
		Sys.out.print("SEDONA: $name: BACnetAV: \"BACnetAV\" is enabled without enabling the \"BACnetInit\", please enable the BACnetInit and then BACnetAV\n")

//	if( ObjectID == 4 || ObjectID == 0 )
//		Sys.out.print("SEDONA: $name: BACnetAV: ret3 -> $ret3 ret4 -> $ret4 ret -> $ret override_en -> $override_en  ObjectID -> $ObjectID ret8 -> $ret8 ret3 -> $ret3\n")

	//overriding part
	if( ia[ObjectID] == 1 )
	      {
//		Sys.out.print("OVERRIDE: SEDONA: $name: BACnetAV: I'm in BACNET WRITE loop ObjectID -> $ObjectID ret -> $ret ov -> $ov objID_status -> $objID_status ret8 -> $ret8 ret3 -> $ret3\n")
		Out := ret
		ov = true;
		//clearing the override
		override_en = 0
	      }

	//all condition should match, BACnetInit called, priority is not @1 in BDT, SAE is BOSS and Not override happened by BDT.
	if ( (ret3 == 1) && (ov == false) && (objID_status == false) && (ret8 == false) )//Titus: Modified on July18th
	//if ( (ret3 == 1) && (ov == false) && (objID_status == false) && (ret8 == false) && ib[this.ObjectID] == false)
	{
//		Sys.out.print("SEDONA: $name: BACnetAV: I'm in SEDONA WRITE loop  ObjectID -> $ObjectID  ret -> $ret ov -> $ov objID_status -> $objID_status ret8 -> $ret8 ret3 -> $ret3\n")

		//if(!ib[ObjectID])
		if(In_change)
			Out := In

		//need to send the Out value to BACnet to update the "level" variable to replicate the same in BDT tool.
		BACnetDev.doBacnetAVValueUpdate(Out, In_change, ObjectID)
		In_change = false;
	}

	if (Priority > 16)
	{
		//Sys.out.print("SEDONA: $name: BACnetAV: Priority level is excedded! and set to default @10; BACnet is support upto 16 priority levels\n")
		Priority := 10
	}

	//Its for setting priority to BDT
	ret2 = BACnetDev.doBacnetAVPriorityStatus(Priority, pri_change, ObjectID)

	if ( ret2 != 0 )
	{
		//Sys.out.print("################## Glory to GOD! override is cleared now, priority $ret2 ##################\n")
		ov = false;
	}

	ret9 = BACnetDev.doBacnetAVNullInst()

	ib[ret9] = true;

	ret8 = BACnetDev.doBacnetAVNullStatus()

	//Sys.out.print("SEDONA: $name: BACnetAV: ################## Glory to GOD! ################## ObjectID $ObjectID ret9 $ret9 ret8 $ret8\n");

	if ( ib[this.ObjectID] == true )
	{
		//Sys.out.print("SEDONA: $name: BACnetAV: NULL loop status -> $ret8  ObjectID -> $ObjectID ret9 -> $ret9 ret8 -> $ret8\n")
		//clear the event
		ia[this.ObjectID] = -5;
		ret8 = false

		null_status2 = true;

			if(null_status && count == 0)
			{
			count++;
			In_change = true;
			}
			else
			In_change = false;

		//Sys.out.print("SEDONA: $name: BACnetAV: NULL loop status -> In_change : $In_change\n")

	}

  }

//defining the local variables
define int MAX_ANALOG_VALUES = 5;//#define MAX_ANALOG_VALUES 5
static int override_en = 0;
bool ov = false;
float ret = 0.0;
int ret2 = 255;
int ret3 = 0;
int ret4 = -1;
int priority_max = 16;
bool In_change = null;
bool pri_change = null;
bool pri_bkp = false;
inline static int[10] ia//Increase all the arrays if OBJECTS count increases
inline static bool[10] ib
bool objID_status = false;
int ret6 = 9;
float ret7 = 0.0;

static bool ret8 = false;
static int ret9 = -1;
bool null_status = false;
bool null_status2 = false;
int count = 0
}
